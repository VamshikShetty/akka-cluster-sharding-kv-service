load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

RULES_JVM_EXTERNAL_TAG = "4.1"
RULES_JVM_EXTERNAL_SHA = "f36441aa876c4f6427bfb2d1f2d723b48e9d930b62662bf723ddfb8fc80f0140"

http_archive(
   name = "rules_jvm_external",
   strip_prefix = "rules_jvm_external-%s" % RULES_JVM_EXTERNAL_TAG,
   sha256 = RULES_JVM_EXTERNAL_SHA,
   url = "https://github.com/bazelbuild/rules_jvm_external/archive/%s.zip" % RULES_JVM_EXTERNAL_TAG,
)

load("@rules_jvm_external//:defs.bzl", "maven_install")

# Spring framework versions.
springframework_boot_version = "2.7.0"
springframework_spring_version = "5.3.20"

# faster xml jackson versions.
fasterxml_jackson_core_version = "2.13.3"
gson_version = "2.9.0"
openapitools_jackson = "0.2.2"
swagger_core = "2.2.2"

# project lombok version.
lombok_version = "1.18.22"

# Akka versions.
akka_version = "2.6.19"
akka_versions_ScalaBinary = "2.13"

# logging versions.
logback_version = "1.2.3"
slf4j_version = "1.7.30"
jupiter_version = "5.9.0"
javax_validation_version = "2.0.1.Final"
javax_annotation_version = "1.3.2"

maven_install(
   artifacts = [
      # dependency to use tuple pair
      "org.apache.commons:commons-lang3:3.12.0",

      # Logging dependencies
      "ch.qos.logback:logback-classic:{}".format(logback_version),
      "org.slf4j:slf4j-api:{}".format(slf4j_version),
      "org.slf4j:slf4j-log4j12:{}".format(slf4j_version),

      # Springframework dependencies.
      "org.springframework.boot:spring-boot-autoconfigure:{}".format(springframework_boot_version),
      "org.springframework.boot:spring-boot-starter-web:{}".format(springframework_boot_version),
      "org.springframework.boot:spring-boot:{}".format(springframework_boot_version),
      "org.springframework.boot:spring-boot-test:{}".format(springframework_boot_version),
      "org.springframework.boot:spring-boot-starter-validation:{}".format(springframework_boot_version),
      "org.springframework.boot:spring-boot-starter-test:{}".format(springframework_boot_version),
      "org.springframework:spring-beans:{}".format(springframework_spring_version),
      "org.springframework:spring-context:{}".format(springframework_spring_version),
      "org.springframework:spring-web:{}".format(springframework_spring_version),

      "org.junit.jupiter:junit-jupiter-api:{}".format(jupiter_version),
      "org.openapitools:jackson-databind-nullable:{}".format(openapitools_jackson),

      # Jackson serialization dependencies
      "com.fasterxml.jackson.core:jackson-annotations:{}".format(fasterxml_jackson_core_version),
      "com.fasterxml.jackson.core:jackson-databind:{}".format(fasterxml_jackson_core_version),
      "com.fasterxml.jackson.core:jackson-core:{}".format(fasterxml_jackson_core_version),
      "com.fasterxml.jackson.module:jackson-module-scala_{}:{}".format(akka_versions_ScalaBinary, fasterxml_jackson_core_version),
      "com.typesafe.akka:akka-serialization-jackson_{}:{}".format(akka_versions_ScalaBinary, akka_version),

      # GSON
      "com.google.code.gson:gson:{}".format(gson_version),

      # Tomacat request/response package.
      # "org.apache.tomcat.embed:tomcat-embed-core:10.0.22",
      "javax.servlet:javax.servlet-api:4.0.1",

      "javax.validation:validation-api:{}".format(javax_validation_version),
      "javax.annotation:javax.annotation-api:{}".format(javax_annotation_version),

      # Akka actor dependencies
      "com.typesafe.akka:akka-actor_{}:{}".format(akka_versions_ScalaBinary, akka_version),
      "com.typesafe.akka:akka-actor-typed_{}:{}".format(akka_versions_ScalaBinary, akka_version),

      # Akka cluster dependencies
      "com.typesafe.akka:akka-cluster-sharding_{}:{}".format(akka_versions_ScalaBinary, akka_version),
      "com.typesafe.akka:akka-cluster-sharding-typed_{}:{}".format(akka_versions_ScalaBinary, akka_version),
      "com.typesafe.akka:akka-cluster-typed_{}:{}".format(akka_versions_ScalaBinary, akka_version),
      "com.typesafe.akka:akka-cluster_{}:{}".format(akka_versions_ScalaBinary, akka_version),

      # Akka remoting dependencies
      "com.typesafe.akka:akka-remote_{}:{}".format(akka_versions_ScalaBinary, akka_version),
      "com.typesafe.akka:akka-stream_{}:{}".format(akka_versions_ScalaBinary, akka_version),

      # Persistence dependencies
      "com.typesafe.akka:akka-persistence-typed_{}:{}".format(akka_versions_ScalaBinary, akka_version),

      # Cassandra dependencies
      "com.typesafe.akka:akka-persistence-cassandra_{}:{}".format(akka_versions_ScalaBinary, "1.0.4"),
      "com.typesafe.akka:akka-persistence-query_{}:{}".format(akka_versions_ScalaBinary, akka_version),
      "com.typesafe.akka:akka-cluster-tools_{}:{}".format(akka_versions_ScalaBinary, akka_version),

      # Cassandra datastax driver queries dependencies
      "com.datastax.oss:java-driver-core:4.6.1",

      # Alpakka dependencies
      "com.lightbend.akka:akka-stream-alpakka-cassandra_{}:{}".format(akka_versions_ScalaBinary, "2.0.2"),

      # Map maker for cache entries with, ref : https://www.baeldung.com/guava-mapmaker
      "com.google.guava:guava:31.0.1-jre",

      "io.swagger.core.v3:swagger-annotations:{}".format(swagger_core),
      "io.swagger.core.v3:swagger-models:{}".format(swagger_core),
   ],
   repositories = [
      "https://repo1.maven.org/maven2/",
      "https://jcenter.bintray.com/",
      "https://maven.google.com",
   ],
   fetch_sources = True,
)